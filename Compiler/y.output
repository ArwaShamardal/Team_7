Terminals unused in grammar

   SEMICOLON
   DOUBLE
   VAL_DOUBLE


State 134 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: Starter

    2 Starter: Statement
    3        | Function

    4 Statement: VarDeclaration Starter
    5          | Assign Starter
    6          | FunctionCall Starter
    7          | Condition Starter
    8          | WhileLoop Starter
    9          | DoWhileLoop Starter
   10          | ForLoop Starter
   11          | SwitchCase Starter
   12          | Increment Starter
   13          | Decrement Starter
   14          | Return Starter
   15          | '{' Statement '}' Starter
   16          | BREAK ';' Starter
   17          | CONTINUE ';' Starter
   18          | /* empty */

   19 OneLineDeclaration: AssignExp ',' OneLineDeclaration
   20                   | AssignExp ';'
   21                   | LHS ',' OneLineDeclaration
   22                   | LHS ';'

   23 VarDeclaration: DataType OneLineDeclaration
   24               | CONSTANT VarDeclaration

   25 Expression: ArithmeticExp
   26           | FunctionCallExp
   27           | RelationalExp
   28           | LogicalExp
   29           | '(' Expression ')'
   30           | ValueTypeAll
   31           | AssignExp
   32           | IncrementExp
   33           | DecrementExp
   34           | LHS

   35 ArithmeticExp: Expression '+' Expression
   36              | Expression '-' Expression
   37              | Expression '*' Expression
   38              | Expression '/' Expression
   39              | Expression '%' Expression
   40              | '-' Expression

   41 RelationalExp: Expression OP_EQUALITY Expression
   42              | Expression OP_INEQUALITY Expression
   43              | Expression OP_GREATER_OR_EQUAL Expression
   44              | Expression OP_LESS_OR_EQUAL Expression
   45              | Expression OP_GREATER_THAN Expression
   46              | Expression OP_LESS_THAN Expression

   47 LogicalExp: Expression OP_LOGICAL_OR Expression
   48           | Expression OP_LOGICAL_AND Expression
   49           | OP_LOGICAL_NOT Expression

   50 AssignExp: LHS AssignOperator Expression

   51 LHS: IDETIFIER

   52 Assign: AssignExp ';'

   53 AssignOperator: '='
   54               | OP_PLUS_EQUAL
   55               | OP_MINUS_EQUAL
   56               | OP_MULTIPLY_EQUAL
   57               | OP_DIVIDE_EQUAL
   58               | OP_MODULO_EQUAL

   59 IncrementExp: OP_INCREMENT IDETIFIER
   60             | IDETIFIER OP_INCREMENT

   61 DecrementExp: OP_DECREMENT IDETIFIER
   62             | IDETIFIER OP_DECREMENT

   63 Increment: IncrementExp ';'

   64 Decrement: DecrementExp ';'

   65 Return: RETURN Expression ';'
   66       | RETURN ';'

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement '}'

   68 Condition: IF '(' Expression ')' '{' Statement '}'
   69          | IF '(' Expression ')' '{' Statement '}' ELSE '{' Statement '}'

   70 WhileLoop: WHILE '(' Expression ')' '{' Statement '}'

   71 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' ';'

   72 ForLoopInit: VarDeclaration
   73            | Assign

   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}'

   75 SwitchValueTypes: VAL_INTEGER
   76                 | VAL_CHAR

   77 Case: CASE SwitchValueTypes ':' Statement Case
   78     | DEFAULT ':' Statement
   79     | /* empty */

   80 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case '}'

   81 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid IDETIFIER
   82           | DataTypeNoVoid IDETIFIER
   83           | VOID
   84           | /* empty */

   85 Arguments: Expression ',' Arguments
   86          | Expression
   87          | /* empty */

   88 FunctionCallExp: IDETIFIER '(' Arguments ')'

   89 FunctionCall: FunctionCallExp ';'

   90 ValueTypeNumber: VAL_INTEGER
   91                | VAL_FLOAT

   92 ValueTypeLetter: VAL_BOOLEAN
   93                | VAL_CHAR
   94                | VAL_STRING

   95 ValueTypeAll: ValueTypeNumber
   96             | ValueTypeLetter

   97 DataTypeNoVoid: INTEGER
   98               | FLOAT
   99               | CHARACTER
  100               | STRING
  101               | BOOLEAN

  102 DataType: INTEGER
  103         | FLOAT
  104         | CHARACTER
  105         | STRING
  106         | BOOLEAN
  107         | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 39
'(' (40) 29 67 68 69 70 71 74 80 88
')' (41) 29 67 68 69 70 71 74 80 88
'*' (42) 37
'+' (43) 35
',' (44) 19 21 81 85
'-' (45) 36 40
'/' (47) 38
':' (58) 77 78
';' (59) 16 17 20 22 52 63 64 65 66 71 74 89
'=' (61) 53
'{' (123) 15 67 68 69 70 71 74 80
'}' (125) 15 67 68 69 70 71 74 80
error (256)
IF (258) 68 69
ELSE (259) 69
FOR (260) 74
WHILE (261) 70 71
DO (262) 71
SWITCH (263) 80
CASE (264) 77
DEFAULT (265) 78
BREAK (266) 16
CONTINUE (267) 17
RETURN (268) 65 66
SEMICOLON (269)
INTEGER (270) 97 102
CHARACTER (271) 99 104
FLOAT (272) 98 103
STRING (273) 100 105
DOUBLE (274)
BOOLEAN (275) 101 106
CONSTANT (276) 24
VOID (277) 83 107
VAL_INTEGER (278) 75 90
VAL_FLOAT (279) 91
VAL_DOUBLE (280)
VAL_STRING (281) 94
VAL_CHAR (282) 76 93
VAL_BOOLEAN (283) 92
IDETIFIER (284) 51 59 60 61 62 67 80 81 82 88
OP_INCREMENT (285) 59 60
OP_DECREMENT (286) 61 62
OP_MODULO_EQUAL (287) 58
OP_DIVIDE_EQUAL (288) 57
OP_MULTIPLY_EQUAL (289) 56
OP_MINUS_EQUAL (290) 55
OP_PLUS_EQUAL (291) 54
OP_LOGICAL_OR (292) 47
OP_LOGICAL_AND (293) 48
OP_INEQUALITY (294) 42
OP_EQUALITY (295) 41
OP_GREATER_THAN (296) 45
OP_LESS_THAN (297) 46
OP_GREATER_OR_EQUAL (298) 43
OP_LESS_OR_EQUAL (299) 44
OP_LOGICAL_NOT (300) 49
THEN (301)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
Starter (62)
    on left: 2 3, on right: 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17
Statement (63)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 15
    67 68 69 70 71 74 77 78
OneLineDeclaration (64)
    on left: 19 20 21 22, on right: 19 21 23
VarDeclaration (65)
    on left: 23 24, on right: 4 24 72
Expression (66)
    on left: 25 26 27 28 29 30 31 32 33 34, on right: 29 35 36 37 38
    39 40 41 42 43 44 45 46 47 48 49 50 65 68 69 70 71 74 85 86
ArithmeticExp (67)
    on left: 35 36 37 38 39 40, on right: 25
RelationalExp (68)
    on left: 41 42 43 44 45 46, on right: 27
LogicalExp (69)
    on left: 47 48 49, on right: 28
AssignExp (70)
    on left: 50, on right: 19 20 31 52
LHS (71)
    on left: 51, on right: 21 22 34 50
Assign (72)
    on left: 52, on right: 5 73
AssignOperator (73)
    on left: 53 54 55 56 57 58, on right: 50
IncrementExp (74)
    on left: 59 60, on right: 32 63
DecrementExp (75)
    on left: 61 62, on right: 33 64
Increment (76)
    on left: 63, on right: 12
Decrement (77)
    on left: 64, on right: 13
Return (78)
    on left: 65 66, on right: 14
Function (79)
    on left: 67, on right: 3
Condition (80)
    on left: 68 69, on right: 7
WhileLoop (81)
    on left: 70, on right: 8
DoWhileLoop (82)
    on left: 71, on right: 9
ForLoopInit (83)
    on left: 72 73, on right: 74
ForLoop (84)
    on left: 74, on right: 10
SwitchValueTypes (85)
    on left: 75 76, on right: 77
Case (86)
    on left: 77 78 79, on right: 77 80
SwitchCase (87)
    on left: 80, on right: 11
Parameters (88)
    on left: 81 82 83 84, on right: 67
Arguments (89)
    on left: 85 86 87, on right: 85 88
FunctionCallExp (90)
    on left: 88, on right: 26 89
FunctionCall (91)
    on left: 89, on right: 6
ValueTypeNumber (92)
    on left: 90 91, on right: 95
ValueTypeLetter (93)
    on left: 92 93 94, on right: 96
ValueTypeAll (94)
    on left: 95 96, on right: 30
DataTypeNoVoid (95)
    on left: 97 98 99 100 101, on right: 81 82
DataType (96)
    on left: 102 103 104 105 106 107, on right: 23 67


state 0

    0 $accept: . program $end

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    program          go to state 20
    Starter          go to state 21
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 1

   68 Condition: IF . '(' Expression ')' '{' Statement '}'
   69          | IF . '(' Expression ')' '{' Statement '}' ELSE '{' Statement '}'

    '('  shift, and go to state 41


state 2

   74 ForLoop: FOR . '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}'

    '('  shift, and go to state 42


state 3

   70 WhileLoop: WHILE . '(' Expression ')' '{' Statement '}'

    '('  shift, and go to state 43


state 4

   71 DoWhileLoop: DO . '{' Statement '}' WHILE '(' Expression ')' ';'

    '{'  shift, and go to state 44


state 5

   80 SwitchCase: SWITCH . '(' IDETIFIER ')' '{' Case '}'

    '('  shift, and go to state 45


state 6

   16 Statement: BREAK . ';' Starter

    ';'  shift, and go to state 46


state 7

   17 Statement: CONTINUE . ';' Starter

    ';'  shift, and go to state 47


state 8

   65 Return: RETURN . Expression ';'
   66       | RETURN . ';'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55
    ';'             shift, and go to state 56

    Expression       go to state 57
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 9

  102 DataType: INTEGER .

    $default  reduce using rule 102 (DataType)


state 10

  104 DataType: CHARACTER .

    $default  reduce using rule 104 (DataType)


state 11

  103 DataType: FLOAT .

    $default  reduce using rule 103 (DataType)


state 12

  105 DataType: STRING .

    $default  reduce using rule 105 (DataType)


state 13

  106 DataType: BOOLEAN .

    $default  reduce using rule 106 (DataType)


state 14

   24 VarDeclaration: CONSTANT . VarDeclaration

    INTEGER    shift, and go to state 9
    CHARACTER  shift, and go to state 10
    FLOAT      shift, and go to state 11
    STRING     shift, and go to state 12
    BOOLEAN    shift, and go to state 13
    CONSTANT   shift, and go to state 14
    VOID       shift, and go to state 15

    VarDeclaration  go to state 69
    DataType        go to state 70


state 15

  107 DataType: VOID .

    $default  reduce using rule 107 (DataType)


state 16

   51 LHS: IDETIFIER .
   60 IncrementExp: IDETIFIER . OP_INCREMENT
   62 DecrementExp: IDETIFIER . OP_DECREMENT
   88 FunctionCallExp: IDETIFIER . '(' Arguments ')'

    OP_INCREMENT  shift, and go to state 71
    OP_DECREMENT  shift, and go to state 72
    '('           shift, and go to state 73

    $default  reduce using rule 51 (LHS)


state 17

   59 IncrementExp: OP_INCREMENT . IDETIFIER

    IDETIFIER  shift, and go to state 74


state 18

   61 DecrementExp: OP_DECREMENT . IDETIFIER

    IDETIFIER  shift, and go to state 75


state 19

   15 Statement: '{' . Statement '}' Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 76
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 20

    0 $accept: program . $end

    $end  shift, and go to state 77


state 21

    1 program: Starter .

    $default  reduce using rule 1 (program)


state 22

    2 Starter: Statement .

    $default  reduce using rule 2 (Starter)


state 23

    4 Statement: VarDeclaration . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 78
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 24

   52 Assign: AssignExp . ';'

    ';'  shift, and go to state 79


state 25

   50 AssignExp: LHS . AssignOperator Expression

    OP_MODULO_EQUAL    shift, and go to state 80
    OP_DIVIDE_EQUAL    shift, and go to state 81
    OP_MULTIPLY_EQUAL  shift, and go to state 82
    OP_MINUS_EQUAL     shift, and go to state 83
    OP_PLUS_EQUAL      shift, and go to state 84
    '='                shift, and go to state 85

    AssignOperator  go to state 86


state 26

    5 Statement: Assign . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 87
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 27

   63 Increment: IncrementExp . ';'

    ';'  shift, and go to state 88


state 28

   64 Decrement: DecrementExp . ';'

    ';'  shift, and go to state 89


state 29

   12 Statement: Increment . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 90
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 30

   13 Statement: Decrement . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 91
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 31

   14 Statement: Return . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 92
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 32

    3 Starter: Function .

    $default  reduce using rule 3 (Starter)


state 33

    7 Statement: Condition . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 93
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 34

    8 Statement: WhileLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 94
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 35

    9 Statement: DoWhileLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 95
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 36

   10 Statement: ForLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 96
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 37

   11 Statement: SwitchCase . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 97
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 38

   89 FunctionCall: FunctionCallExp . ';'

    ';'  shift, and go to state 98


state 39

    6 Statement: FunctionCall . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 99
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 40

   23 VarDeclaration: DataType . OneLineDeclaration
   67 Function: DataType . IDETIFIER '(' Parameters ')' '{' Statement '}'

    IDETIFIER  shift, and go to state 100

    OneLineDeclaration  go to state 101
    AssignExp           go to state 102
    LHS                 go to state 103


state 41

   68 Condition: IF '(' . Expression ')' '{' Statement '}'
   69          | IF '(' . Expression ')' '{' Statement '}' ELSE '{' Statement '}'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 104
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 42

   74 ForLoop: FOR '(' . ForLoopInit Expression ';' Expression ')' '{' Statement '}'

    INTEGER    shift, and go to state 9
    CHARACTER  shift, and go to state 10
    FLOAT      shift, and go to state 11
    STRING     shift, and go to state 12
    BOOLEAN    shift, and go to state 13
    CONSTANT   shift, and go to state 14
    VOID       shift, and go to state 15
    IDETIFIER  shift, and go to state 105

    VarDeclaration  go to state 106
    AssignExp       go to state 24
    LHS             go to state 25
    Assign          go to state 107
    ForLoopInit     go to state 108
    DataType        go to state 70


state 43

   70 WhileLoop: WHILE '(' . Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 109
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 44

   71 DoWhileLoop: DO '{' . Statement '}' WHILE '(' Expression ')' ';'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 110
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 45

   80 SwitchCase: SWITCH '(' . IDETIFIER ')' '{' Case '}'

    IDETIFIER  shift, and go to state 111


state 46

   16 Statement: BREAK ';' . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 112
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 47

   17 Statement: CONTINUE ';' . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 113
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 48

   90 ValueTypeNumber: VAL_INTEGER .

    $default  reduce using rule 90 (ValueTypeNumber)


state 49

   91 ValueTypeNumber: VAL_FLOAT .

    $default  reduce using rule 91 (ValueTypeNumber)


state 50

   94 ValueTypeLetter: VAL_STRING .

    $default  reduce using rule 94 (ValueTypeLetter)


state 51

   93 ValueTypeLetter: VAL_CHAR .

    $default  reduce using rule 93 (ValueTypeLetter)


state 52

   92 ValueTypeLetter: VAL_BOOLEAN .

    $default  reduce using rule 92 (ValueTypeLetter)


state 53

   40 ArithmeticExp: '-' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 114
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 54

   49 LogicalExp: OP_LOGICAL_NOT . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 115
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 55

   29 Expression: '(' . Expression ')'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 116
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 56

   66 Return: RETURN ';' .

    $default  reduce using rule 66 (Return)


state 57

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   65 Return: RETURN Expression . ';'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ';'                  shift, and go to state 130


state 58

   25 Expression: ArithmeticExp .

    $default  reduce using rule 25 (Expression)


state 59

   27 Expression: RelationalExp .

    $default  reduce using rule 27 (Expression)


state 60

   28 Expression: LogicalExp .

    $default  reduce using rule 28 (Expression)


state 61

   31 Expression: AssignExp .

    $default  reduce using rule 31 (Expression)


state 62

   34 Expression: LHS .
   50 AssignExp: LHS . AssignOperator Expression

    OP_MODULO_EQUAL    shift, and go to state 80
    OP_DIVIDE_EQUAL    shift, and go to state 81
    OP_MULTIPLY_EQUAL  shift, and go to state 82
    OP_MINUS_EQUAL     shift, and go to state 83
    OP_PLUS_EQUAL      shift, and go to state 84
    '='                shift, and go to state 85

    $default  reduce using rule 34 (Expression)

    AssignOperator  go to state 86


state 63

   32 Expression: IncrementExp .

    $default  reduce using rule 32 (Expression)


state 64

   33 Expression: DecrementExp .

    $default  reduce using rule 33 (Expression)


state 65

   26 Expression: FunctionCallExp .

    $default  reduce using rule 26 (Expression)


state 66

   95 ValueTypeAll: ValueTypeNumber .

    $default  reduce using rule 95 (ValueTypeAll)


state 67

   96 ValueTypeAll: ValueTypeLetter .

    $default  reduce using rule 96 (ValueTypeAll)


state 68

   30 Expression: ValueTypeAll .

    $default  reduce using rule 30 (Expression)


state 69

   24 VarDeclaration: CONSTANT VarDeclaration .

    $default  reduce using rule 24 (VarDeclaration)


state 70

   23 VarDeclaration: DataType . OneLineDeclaration

    IDETIFIER  shift, and go to state 105

    OneLineDeclaration  go to state 101
    AssignExp           go to state 102
    LHS                 go to state 103


state 71

   60 IncrementExp: IDETIFIER OP_INCREMENT .

    $default  reduce using rule 60 (IncrementExp)


state 72

   62 DecrementExp: IDETIFIER OP_DECREMENT .

    $default  reduce using rule 62 (DecrementExp)


state 73

   88 FunctionCallExp: IDETIFIER '(' . Arguments ')'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    $default  reduce using rule 87 (Arguments)

    Expression       go to state 131
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    Arguments        go to state 132
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 74

   59 IncrementExp: OP_INCREMENT IDETIFIER .

    $default  reduce using rule 59 (IncrementExp)


state 75

   61 DecrementExp: OP_DECREMENT IDETIFIER .

    $default  reduce using rule 61 (DecrementExp)


state 76

   15 Statement: '{' Statement . '}' Starter

    '}'  shift, and go to state 133


state 77

    0 $accept: program $end .

    $default  accept


state 78

    4 Statement: VarDeclaration Starter .

    $default  reduce using rule 4 (Statement)


state 79

   52 Assign: AssignExp ';' .

    $default  reduce using rule 52 (Assign)


state 80

   58 AssignOperator: OP_MODULO_EQUAL .

    $default  reduce using rule 58 (AssignOperator)


state 81

   57 AssignOperator: OP_DIVIDE_EQUAL .

    $default  reduce using rule 57 (AssignOperator)


state 82

   56 AssignOperator: OP_MULTIPLY_EQUAL .

    $default  reduce using rule 56 (AssignOperator)


state 83

   55 AssignOperator: OP_MINUS_EQUAL .

    $default  reduce using rule 55 (AssignOperator)


state 84

   54 AssignOperator: OP_PLUS_EQUAL .

    $default  reduce using rule 54 (AssignOperator)


state 85

   53 AssignOperator: '=' .

    $default  reduce using rule 53 (AssignOperator)


state 86

   50 AssignExp: LHS AssignOperator . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 134
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 87

    5 Statement: Assign Starter .

    $default  reduce using rule 5 (Statement)


state 88

   63 Increment: IncrementExp ';' .

    $default  reduce using rule 63 (Increment)


state 89

   64 Decrement: DecrementExp ';' .

    $default  reduce using rule 64 (Decrement)


state 90

   12 Statement: Increment Starter .

    $default  reduce using rule 12 (Statement)


state 91

   13 Statement: Decrement Starter .

    $default  reduce using rule 13 (Statement)


state 92

   14 Statement: Return Starter .

    $default  reduce using rule 14 (Statement)


state 93

    7 Statement: Condition Starter .

    $default  reduce using rule 7 (Statement)


state 94

    8 Statement: WhileLoop Starter .

    $default  reduce using rule 8 (Statement)


state 95

    9 Statement: DoWhileLoop Starter .

    $default  reduce using rule 9 (Statement)


state 96

   10 Statement: ForLoop Starter .

    $default  reduce using rule 10 (Statement)


state 97

   11 Statement: SwitchCase Starter .

    $default  reduce using rule 11 (Statement)


state 98

   89 FunctionCall: FunctionCallExp ';' .

    $default  reduce using rule 89 (FunctionCall)


state 99

    6 Statement: FunctionCall Starter .

    $default  reduce using rule 6 (Statement)


state 100

   51 LHS: IDETIFIER .
   67 Function: DataType IDETIFIER . '(' Parameters ')' '{' Statement '}'

    '('  shift, and go to state 135

    $default  reduce using rule 51 (LHS)


state 101

   23 VarDeclaration: DataType OneLineDeclaration .

    $default  reduce using rule 23 (VarDeclaration)


state 102

   19 OneLineDeclaration: AssignExp . ',' OneLineDeclaration
   20                   | AssignExp . ';'

    ';'  shift, and go to state 136
    ','  shift, and go to state 137


state 103

   21 OneLineDeclaration: LHS . ',' OneLineDeclaration
   22                   | LHS . ';'
   50 AssignExp: LHS . AssignOperator Expression

    OP_MODULO_EQUAL    shift, and go to state 80
    OP_DIVIDE_EQUAL    shift, and go to state 81
    OP_MULTIPLY_EQUAL  shift, and go to state 82
    OP_MINUS_EQUAL     shift, and go to state 83
    OP_PLUS_EQUAL      shift, and go to state 84
    '='                shift, and go to state 85
    ';'                shift, and go to state 138
    ','                shift, and go to state 139

    AssignOperator  go to state 86


state 104

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   68 Condition: IF '(' Expression . ')' '{' Statement '}'
   69          | IF '(' Expression . ')' '{' Statement '}' ELSE '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ')'                  shift, and go to state 140


state 105

   51 LHS: IDETIFIER .

    $default  reduce using rule 51 (LHS)


state 106

   72 ForLoopInit: VarDeclaration .

    $default  reduce using rule 72 (ForLoopInit)


state 107

   73 ForLoopInit: Assign .

    $default  reduce using rule 73 (ForLoopInit)


state 108

   74 ForLoop: FOR '(' ForLoopInit . Expression ';' Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 141
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 109

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   70 WhileLoop: WHILE '(' Expression . ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ')'                  shift, and go to state 142


state 110

   71 DoWhileLoop: DO '{' Statement . '}' WHILE '(' Expression ')' ';'

    '}'  shift, and go to state 143


state 111

   80 SwitchCase: SWITCH '(' IDETIFIER . ')' '{' Case '}'

    ')'  shift, and go to state 144


state 112

   16 Statement: BREAK ';' Starter .

    $default  reduce using rule 16 (Statement)


state 113

   17 Statement: CONTINUE ';' Starter .

    $default  reduce using rule 17 (Statement)


state 114

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   40              | '-' Expression .
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 40 (ArithmeticExp)


state 115

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   49           | OP_LOGICAL_NOT Expression .

    $default  reduce using rule 49 (LogicalExp)


state 116

   29 Expression: '(' Expression . ')'
   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ')'                  shift, and go to state 145


state 117

   47 LogicalExp: Expression OP_LOGICAL_OR . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 146
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 118

   48 LogicalExp: Expression OP_LOGICAL_AND . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 147
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 119

   42 RelationalExp: Expression OP_INEQUALITY . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 148
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 120

   41 RelationalExp: Expression OP_EQUALITY . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 149
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 121

   45 RelationalExp: Expression OP_GREATER_THAN . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 150
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 122

   46 RelationalExp: Expression OP_LESS_THAN . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 151
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 123

   43 RelationalExp: Expression OP_GREATER_OR_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 152
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 124

   44 RelationalExp: Expression OP_LESS_OR_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 153
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 125

   35 ArithmeticExp: Expression '+' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 154
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 126

   36 ArithmeticExp: Expression '-' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 155
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 127

   37 ArithmeticExp: Expression '*' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 156
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 128

   38 ArithmeticExp: Expression '/' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 157
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 129

   39 ArithmeticExp: Expression '%' . Expression

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 158
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 130

   65 Return: RETURN Expression ';' .

    $default  reduce using rule 65 (Return)


state 131

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   85 Arguments: Expression . ',' Arguments
   86          | Expression .

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ','                  shift, and go to state 159

    $default  reduce using rule 86 (Arguments)


state 132

   88 FunctionCallExp: IDETIFIER '(' Arguments . ')'

    ')'  shift, and go to state 160


state 133

   15 Statement: '{' Statement '}' . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Starter          go to state 161
    Statement        go to state 22
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Function         go to state 32
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 40


state 134

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   50 AssignExp: LHS AssignOperator Expression .

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129

    OP_LOGICAL_OR        [reduce using rule 50 (AssignExp)]
    OP_LOGICAL_AND       [reduce using rule 50 (AssignExp)]
    OP_INEQUALITY        [reduce using rule 50 (AssignExp)]
    OP_EQUALITY          [reduce using rule 50 (AssignExp)]
    OP_GREATER_THAN      [reduce using rule 50 (AssignExp)]
    OP_LESS_THAN         [reduce using rule 50 (AssignExp)]
    OP_GREATER_OR_EQUAL  [reduce using rule 50 (AssignExp)]
    OP_LESS_OR_EQUAL     [reduce using rule 50 (AssignExp)]
    '+'                  [reduce using rule 50 (AssignExp)]
    '-'                  [reduce using rule 50 (AssignExp)]
    '*'                  [reduce using rule 50 (AssignExp)]
    '/'                  [reduce using rule 50 (AssignExp)]
    '%'                  [reduce using rule 50 (AssignExp)]
    $default             reduce using rule 50 (AssignExp)


state 135

   67 Function: DataType IDETIFIER '(' . Parameters ')' '{' Statement '}'

    INTEGER    shift, and go to state 162
    CHARACTER  shift, and go to state 163
    FLOAT      shift, and go to state 164
    STRING     shift, and go to state 165
    BOOLEAN    shift, and go to state 166
    VOID       shift, and go to state 167

    $default  reduce using rule 84 (Parameters)

    Parameters      go to state 168
    DataTypeNoVoid  go to state 169


state 136

   20 OneLineDeclaration: AssignExp ';' .

    $default  reduce using rule 20 (OneLineDeclaration)


state 137

   19 OneLineDeclaration: AssignExp ',' . OneLineDeclaration

    IDETIFIER  shift, and go to state 105

    OneLineDeclaration  go to state 170
    AssignExp           go to state 102
    LHS                 go to state 103


state 138

   22 OneLineDeclaration: LHS ';' .

    $default  reduce using rule 22 (OneLineDeclaration)


state 139

   21 OneLineDeclaration: LHS ',' . OneLineDeclaration

    IDETIFIER  shift, and go to state 105

    OneLineDeclaration  go to state 171
    AssignExp           go to state 102
    LHS                 go to state 103


state 140

   68 Condition: IF '(' Expression ')' . '{' Statement '}'
   69          | IF '(' Expression ')' . '{' Statement '}' ELSE '{' Statement '}'

    '{'  shift, and go to state 172


state 141

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   74 ForLoop: FOR '(' ForLoopInit Expression . ';' Expression ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ';'                  shift, and go to state 173


state 142

   70 WhileLoop: WHILE '(' Expression ')' . '{' Statement '}'

    '{'  shift, and go to state 174


state 143

   71 DoWhileLoop: DO '{' Statement '}' . WHILE '(' Expression ')' ';'

    WHILE  shift, and go to state 175


state 144

   80 SwitchCase: SWITCH '(' IDETIFIER ')' . '{' Case '}'

    '{'  shift, and go to state 176


state 145

   29 Expression: '(' Expression ')' .

    $default  reduce using rule 29 (Expression)


state 146

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   47           | Expression OP_LOGICAL_OR Expression .
   48           | Expression . OP_LOGICAL_AND Expression

    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129

    $default  reduce using rule 47 (LogicalExp)


state 147

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   48           | Expression OP_LOGICAL_AND Expression .

    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129

    $default  reduce using rule 48 (LogicalExp)


state 148

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   42              | Expression OP_INEQUALITY Expression .
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129

    $default  reduce using rule 42 (RelationalExp)


state 149

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   41              | Expression OP_EQUALITY Expression .
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129

    $default  reduce using rule 41 (RelationalExp)


state 150

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   45              | Expression OP_GREATER_THAN Expression .
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126
    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 45 (RelationalExp)


state 151

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   46              | Expression OP_LESS_THAN Expression .
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126
    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 46 (RelationalExp)


state 152

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   43              | Expression OP_GREATER_OR_EQUAL Expression .
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126
    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 43 (RelationalExp)


state 153

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   44              | Expression OP_LESS_OR_EQUAL Expression .
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 125
    '-'  shift, and go to state 126
    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 44 (RelationalExp)


state 154

   35 ArithmeticExp: Expression . '+' Expression
   35              | Expression '+' Expression .
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 35 (ArithmeticExp)


state 155

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   36              | Expression '-' Expression .
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    '*'  shift, and go to state 127
    '/'  shift, and go to state 128
    '%'  shift, and go to state 129

    $default  reduce using rule 36 (ArithmeticExp)


state 156

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   37              | Expression '*' Expression .
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 37 (ArithmeticExp)


state 157

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   38              | Expression '/' Expression .
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 38 (ArithmeticExp)


state 158

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   39              | Expression '%' Expression .
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 39 (ArithmeticExp)


state 159

   85 Arguments: Expression ',' . Arguments

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    $default  reduce using rule 87 (Arguments)

    Expression       go to state 131
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    Arguments        go to state 177
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 160

   88 FunctionCallExp: IDETIFIER '(' Arguments ')' .

    $default  reduce using rule 88 (FunctionCallExp)


state 161

   15 Statement: '{' Statement '}' Starter .

    $default  reduce using rule 15 (Statement)


state 162

   97 DataTypeNoVoid: INTEGER .

    $default  reduce using rule 97 (DataTypeNoVoid)


state 163

   99 DataTypeNoVoid: CHARACTER .

    $default  reduce using rule 99 (DataTypeNoVoid)


state 164

   98 DataTypeNoVoid: FLOAT .

    $default  reduce using rule 98 (DataTypeNoVoid)


state 165

  100 DataTypeNoVoid: STRING .

    $default  reduce using rule 100 (DataTypeNoVoid)


state 166

  101 DataTypeNoVoid: BOOLEAN .

    $default  reduce using rule 101 (DataTypeNoVoid)


state 167

   83 Parameters: VOID .

    $default  reduce using rule 83 (Parameters)


state 168

   67 Function: DataType IDETIFIER '(' Parameters . ')' '{' Statement '}'

    ')'  shift, and go to state 178


state 169

   81 Parameters: DataTypeNoVoid . IDETIFIER ',' DataTypeNoVoid IDETIFIER
   82           | DataTypeNoVoid . IDETIFIER

    IDETIFIER  shift, and go to state 179


state 170

   19 OneLineDeclaration: AssignExp ',' OneLineDeclaration .

    $default  reduce using rule 19 (OneLineDeclaration)


state 171

   21 OneLineDeclaration: LHS ',' OneLineDeclaration .

    $default  reduce using rule 21 (OneLineDeclaration)


state 172

   68 Condition: IF '(' Expression ')' '{' . Statement '}'
   69          | IF '(' Expression ')' '{' . Statement '}' ELSE '{' Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 180
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 173

   74 ForLoop: FOR '(' ForLoopInit Expression ';' . Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 181
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 174

   70 WhileLoop: WHILE '(' Expression ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 182
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 175

   71 DoWhileLoop: DO '{' Statement '}' WHILE . '(' Expression ')' ';'

    '('  shift, and go to state 183


state 176

   80 SwitchCase: SWITCH '(' IDETIFIER ')' '{' . Case '}'

    CASE     shift, and go to state 184
    DEFAULT  shift, and go to state 185

    $default  reduce using rule 79 (Case)

    Case  go to state 186


state 177

   85 Arguments: Expression ',' Arguments .

    $default  reduce using rule 85 (Arguments)


state 178

   67 Function: DataType IDETIFIER '(' Parameters ')' . '{' Statement '}'

    '{'  shift, and go to state 187


state 179

   81 Parameters: DataTypeNoVoid IDETIFIER . ',' DataTypeNoVoid IDETIFIER
   82           | DataTypeNoVoid IDETIFIER .

    ','  shift, and go to state 188

    $default  reduce using rule 82 (Parameters)


state 180

   68 Condition: IF '(' Expression ')' '{' Statement . '}'
   69          | IF '(' Expression ')' '{' Statement . '}' ELSE '{' Statement '}'

    '}'  shift, and go to state 189


state 181

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression . ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ')'                  shift, and go to state 190


state 182

   70 WhileLoop: WHILE '(' Expression ')' '{' Statement . '}'

    '}'  shift, and go to state 191


state 183

   71 DoWhileLoop: DO '{' Statement '}' WHILE '(' . Expression ')' ';'

    VAL_INTEGER     shift, and go to state 48
    VAL_FLOAT       shift, and go to state 49
    VAL_STRING      shift, and go to state 50
    VAL_CHAR        shift, and go to state 51
    VAL_BOOLEAN     shift, and go to state 52
    IDETIFIER       shift, and go to state 16
    OP_INCREMENT    shift, and go to state 17
    OP_DECREMENT    shift, and go to state 18
    '-'             shift, and go to state 53
    OP_LOGICAL_NOT  shift, and go to state 54
    '('             shift, and go to state 55

    Expression       go to state 192
    ArithmeticExp    go to state 58
    RelationalExp    go to state 59
    LogicalExp       go to state 60
    AssignExp        go to state 61
    LHS              go to state 62
    IncrementExp     go to state 63
    DecrementExp     go to state 64
    FunctionCallExp  go to state 65
    ValueTypeNumber  go to state 66
    ValueTypeLetter  go to state 67
    ValueTypeAll     go to state 68


state 184

   77 Case: CASE . SwitchValueTypes ':' Statement Case

    VAL_INTEGER  shift, and go to state 193
    VAL_CHAR     shift, and go to state 194

    SwitchValueTypes  go to state 195


state 185

   78 Case: DEFAULT . ':' Statement

    ':'  shift, and go to state 196


state 186

   80 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case . '}'

    '}'  shift, and go to state 197


state 187

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 198
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 188

   81 Parameters: DataTypeNoVoid IDETIFIER ',' . DataTypeNoVoid IDETIFIER

    INTEGER    shift, and go to state 162
    CHARACTER  shift, and go to state 163
    FLOAT      shift, and go to state 164
    STRING     shift, and go to state 165
    BOOLEAN    shift, and go to state 166

    DataTypeNoVoid  go to state 199


state 189

   68 Condition: IF '(' Expression ')' '{' Statement '}' .
   69          | IF '(' Expression ')' '{' Statement '}' . ELSE '{' Statement '}'

    ELSE  shift, and go to state 200

    $default  reduce using rule 68 (Condition)


state 190

   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' . '{' Statement '}'

    '{'  shift, and go to state 201


state 191

   70 WhileLoop: WHILE '(' Expression ')' '{' Statement '}' .

    $default  reduce using rule 70 (WhileLoop)


state 192

   35 ArithmeticExp: Expression . '+' Expression
   36              | Expression . '-' Expression
   37              | Expression . '*' Expression
   38              | Expression . '/' Expression
   39              | Expression . '%' Expression
   41 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression . OP_INEQUALITY Expression
   43              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression . OP_GREATER_THAN Expression
   46              | Expression . OP_LESS_THAN Expression
   47 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression . OP_LOGICAL_AND Expression
   71 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression . ')' ';'

    OP_LOGICAL_OR        shift, and go to state 117
    OP_LOGICAL_AND       shift, and go to state 118
    OP_INEQUALITY        shift, and go to state 119
    OP_EQUALITY          shift, and go to state 120
    OP_GREATER_THAN      shift, and go to state 121
    OP_LESS_THAN         shift, and go to state 122
    OP_GREATER_OR_EQUAL  shift, and go to state 123
    OP_LESS_OR_EQUAL     shift, and go to state 124
    '+'                  shift, and go to state 125
    '-'                  shift, and go to state 126
    '*'                  shift, and go to state 127
    '/'                  shift, and go to state 128
    '%'                  shift, and go to state 129
    ')'                  shift, and go to state 202


state 193

   75 SwitchValueTypes: VAL_INTEGER .

    $default  reduce using rule 75 (SwitchValueTypes)


state 194

   76 SwitchValueTypes: VAL_CHAR .

    $default  reduce using rule 76 (SwitchValueTypes)


state 195

   77 Case: CASE SwitchValueTypes . ':' Statement Case

    ':'  shift, and go to state 203


state 196

   78 Case: DEFAULT ':' . Statement

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 204
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 197

   80 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case '}' .

    $default  reduce using rule 80 (SwitchCase)


state 198

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement . '}'

    '}'  shift, and go to state 205


state 199

   81 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid . IDETIFIER

    IDETIFIER  shift, and go to state 206


state 200

   69 Condition: IF '(' Expression ')' '{' Statement '}' ELSE . '{' Statement '}'

    '{'  shift, and go to state 207


state 201

   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 208
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 202

   71 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' . ';'

    ';'  shift, and go to state 209


state 203

   77 Case: CASE SwitchValueTypes ':' . Statement Case

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 210
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 204

   78 Case: DEFAULT ':' Statement .

    $default  reduce using rule 78 (Case)


state 205

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement '}' .

    $default  reduce using rule 67 (Function)


state 206

   81 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid IDETIFIER .

    $default  reduce using rule 81 (Parameters)


state 207

   69 Condition: IF '(' Expression ')' '{' Statement '}' ELSE '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    BOOLEAN       shift, and go to state 13
    CONSTANT      shift, and go to state 14
    VOID          shift, and go to state 15
    IDETIFIER     shift, and go to state 16
    OP_INCREMENT  shift, and go to state 17
    OP_DECREMENT  shift, and go to state 18
    '{'           shift, and go to state 19

    $default  reduce using rule 18 (Statement)

    Statement        go to state 211
    VarDeclaration   go to state 23
    AssignExp        go to state 24
    LHS              go to state 25
    Assign           go to state 26
    IncrementExp     go to state 27
    DecrementExp     go to state 28
    Increment        go to state 29
    Decrement        go to state 30
    Return           go to state 31
    Condition        go to state 33
    WhileLoop        go to state 34
    DoWhileLoop      go to state 35
    ForLoop          go to state 36
    SwitchCase       go to state 37
    FunctionCallExp  go to state 38
    FunctionCall     go to state 39
    DataType         go to state 70


state 208

   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement . '}'

    '}'  shift, and go to state 212


state 209

   71 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' ';' .

    $default  reduce using rule 71 (DoWhileLoop)


state 210

   77 Case: CASE SwitchValueTypes ':' Statement . Case

    CASE     shift, and go to state 184
    DEFAULT  shift, and go to state 185

    $default  reduce using rule 79 (Case)

    Case  go to state 213


state 211

   69 Condition: IF '(' Expression ')' '{' Statement '}' ELSE '{' Statement . '}'

    '}'  shift, and go to state 214


state 212

   74 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}' .

    $default  reduce using rule 74 (ForLoop)


state 213

   77 Case: CASE SwitchValueTypes ':' Statement Case .

    $default  reduce using rule 77 (Case)


state 214

   69 Condition: IF '(' Expression ')' '{' Statement '}' ELSE '{' Statement '}' .

    $default  reduce using rule 69 (Condition)
