Terminals unused in grammar

   SEMICOLON
   VAL_DOUBLE
   LOWER_THAN_ELSE


Rules useless in parser due to conflicts

   70 Mif: IF '(' Expression ')' '{' Statement '}' ELSE Mif


State 219 conflicts: 24 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: Starter

    2 Starter: Statement
    3        | Function

    4 Statement: VarDeclaration Starter
    5          | Assign Starter
    6          | FunctionCall Starter
    7          | Condition Starter
    8          | WhileLoop Starter
    9          | DoWhileLoop Starter
   10          | ForLoop Starter
   11          | SwitchCase Starter
   12          | Increment Starter
   13          | Decrement Starter
   14          | ArithmeticAssign Starter
   15          | Return Starter
   16          | BREAK ';' Starter
   17          | CONTINUE ';' Starter
   18          | /* empty */

   19 OneLineDeclaration: AssignExp ',' OneLineDeclaration
   20                   | AssignExp ';'
   21                   | IDETIFIER ',' OneLineDeclaration
   22                   | IDETIFIER ';'

   23 VarDeclaration: DataType OneLineDeclaration
   24               | CONSTANT VarDeclaration

   25 Expression: ArithmeticExp
   26           | FunctionCallExp
   27           | RelationalExp
   28           | LogicalExp
   29           | '(' Expression ')'
   30           | ValueTypeAll
   31           | AssignExp
   32           | IncrementExp
   33           | DecrementExp
   34           | ArithmeticAssignExp
   35           | IDETIFIER

   36 ArithmeticExp: Expression '+' Expression
   37              | Expression '-' Expression
   38              | Expression '*' Expression
   39              | Expression '/' Expression
   40              | Expression '%' Expression
   41              | '-' Expression

   42 RelationalExp: Expression OP_EQUALITY Expression
   43              | Expression OP_INEQUALITY Expression
   44              | Expression OP_GREATER_OR_EQUAL Expression
   45              | Expression OP_LESS_OR_EQUAL Expression
   46              | Expression OP_GREATER_THAN Expression
   47              | Expression OP_LESS_THAN Expression

   48 LogicalExp: Expression OP_LOGICAL_OR Expression
   49           | Expression OP_LOGICAL_AND Expression
   50           | OP_LOGICAL_NOT Expression

   51 AssignExp: IDETIFIER '=' Expression

   52 Assign: AssignExp ';'

   53 ArithmeticAssignExp: IDETIFIER OP_PLUS_EQUAL Expression
   54                    | IDETIFIER OP_MINUS_EQUAL Expression
   55                    | IDETIFIER OP_MULTIPLY_EQUAL Expression
   56                    | IDETIFIER OP_DIVIDE_EQUAL Expression
   57                    | IDETIFIER OP_MODULO_EQUAL Expression

   58 ArithmeticAssign: ArithmeticAssignExp ';'

   59 IncrementExp: OP_INCREMENT IDETIFIER
   60             | IDETIFIER OP_INCREMENT

   61 DecrementExp: OP_DECREMENT IDETIFIER
   62             | IDETIFIER OP_DECREMENT

   63 Increment: IncrementExp ';'

   64 Decrement: DecrementExp ';'

   65 Return: RETURN Expression ';'
   66       | RETURN ';'

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement '}'

   68 Condition: Mif
   69          | Uif

   70 Mif: IF '(' Expression ')' '{' Statement '}' ELSE Mif
   71    | '{' Statement '}'

   72 Uif: IF '(' Expression ')' '{' Statement '}'
   73    | IF '(' Expression ')' '{' Statement '}' ELSE Condition

   74 WhileLoop: WHILE '(' Expression ')' '{' Statement '}'

   75 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' ';'

   76 ForLoopInit: VarDeclaration
   77            | Assign

   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}'

   79 SwitchValueTypes: VAL_INTEGER
   80                 | VAL_CHAR

   81 Case: CASE SwitchValueTypes ':' Statement Case
   82     | DEFAULT ':' Statement
   83     | /* empty */

   84 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case '}'

   85 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid IDETIFIER
   86           | DataTypeNoVoid IDETIFIER
   87           | VOID
   88           | /* empty */

   89 Arguments: Expression ',' Arguments
   90          | Expression
   91          | /* empty */

   92 FunctionCallExp: IDETIFIER '(' Arguments ')'

   93 FunctionCall: FunctionCallExp ';'

   94 ValueTypeNumber: VAL_INTEGER
   95                | VAL_FLOAT

   96 ValueTypeLetter: VAL_BOOLEAN
   97                | VAL_CHAR
   98                | VAL_STRING

   99 ValueTypeAll: ValueTypeNumber
  100             | ValueTypeLetter

  101 DataTypeNoVoid: INTEGER
  102               | FLOAT
  103               | DOUBLE
  104               | CHARACTER
  105               | STRING
  106               | BOOLEAN

  107 DataType: INTEGER
  108         | FLOAT
  109         | DOUBLE
  110         | CHARACTER
  111         | STRING
  112         | BOOLEAN
  113         | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 40
'(' (40) 29 67 70 72 73 74 75 78 84 92
')' (41) 29 67 70 72 73 74 75 78 84 92
'*' (42) 38
'+' (43) 36
',' (44) 19 21 85 89
'-' (45) 37 41
'/' (47) 39
':' (58) 81 82
';' (59) 16 17 20 22 52 58 63 64 65 66 75 78 93
'=' (61) 51
'{' (123) 67 70 71 72 73 74 75 78 84
'}' (125) 67 70 71 72 73 74 75 78 84
error (256)
IF (258) 70 72 73
ELSE (259) 70 73
FOR (260) 78
WHILE (261) 74 75
DO (262) 75
SWITCH (263) 84
CASE (264) 81
DEFAULT (265) 82
BREAK (266) 16
CONTINUE (267) 17
RETURN (268) 65 66
SEMICOLON (269)
INTEGER (270) 101 107
CHARACTER (271) 104 110
FLOAT (272) 102 108
STRING (273) 105 111
DOUBLE (274) 103 109
BOOLEAN (275) 106 112
CONSTANT (276) 24
VOID (277) 87 113
VAL_INTEGER (278) 79 94
VAL_FLOAT (279) 95
VAL_DOUBLE (280)
VAL_STRING (281) 98
VAL_CHAR (282) 80 97
VAL_BOOLEAN (283) 96
IDETIFIER (284) 21 22 35 51 53 54 55 56 57 59 60 61 62 67 84 85 86
    92
OP_INCREMENT (285) 59 60
OP_DECREMENT (286) 61 62
OP_MODULO_EQUAL (287) 57
OP_DIVIDE_EQUAL (288) 56
OP_MULTIPLY_EQUAL (289) 55
OP_MINUS_EQUAL (290) 54
OP_PLUS_EQUAL (291) 53
OP_LOGICAL_OR (292) 48
OP_LOGICAL_AND (293) 49
OP_INEQUALITY (294) 43
OP_EQUALITY (295) 42
OP_GREATER_THAN (296) 46
OP_LESS_THAN (297) 47
OP_GREATER_OR_EQUAL (298) 44
OP_LESS_OR_EQUAL (299) 45
OP_LOGICAL_NOT (300) 50
LOWER_THAN_ELSE (301)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
Starter (62)
    on left: 2 3, on right: 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17
Statement (63)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 67
    70 71 72 73 74 75 78 81 82
OneLineDeclaration (64)
    on left: 19 20 21 22, on right: 19 21 23
VarDeclaration (65)
    on left: 23 24, on right: 4 24 76
Expression (66)
    on left: 25 26 27 28 29 30 31 32 33 34 35, on right: 29 36 37 38
    39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 65 70 72
    73 74 75 78 89 90
ArithmeticExp (67)
    on left: 36 37 38 39 40 41, on right: 25
RelationalExp (68)
    on left: 42 43 44 45 46 47, on right: 27
LogicalExp (69)
    on left: 48 49 50, on right: 28
AssignExp (70)
    on left: 51, on right: 19 20 31 52
Assign (71)
    on left: 52, on right: 5 77
ArithmeticAssignExp (72)
    on left: 53 54 55 56 57, on right: 34 58
ArithmeticAssign (73)
    on left: 58, on right: 14
IncrementExp (74)
    on left: 59 60, on right: 32 63
DecrementExp (75)
    on left: 61 62, on right: 33 64
Increment (76)
    on left: 63, on right: 12
Decrement (77)
    on left: 64, on right: 13
Return (78)
    on left: 65 66, on right: 15
Function (79)
    on left: 67, on right: 3
Condition (80)
    on left: 68 69, on right: 7 73
Mif (81)
    on left: 70 71, on right: 68 70
Uif (82)
    on left: 72 73, on right: 69
WhileLoop (83)
    on left: 74, on right: 8
DoWhileLoop (84)
    on left: 75, on right: 9
ForLoopInit (85)
    on left: 76 77, on right: 78
ForLoop (86)
    on left: 78, on right: 10
SwitchValueTypes (87)
    on left: 79 80, on right: 81
Case (88)
    on left: 81 82 83, on right: 81 84
SwitchCase (89)
    on left: 84, on right: 11
Parameters (90)
    on left: 85 86 87 88, on right: 67
Arguments (91)
    on left: 89 90 91, on right: 89 92
FunctionCallExp (92)
    on left: 92, on right: 26 93
FunctionCall (93)
    on left: 93, on right: 6
ValueTypeNumber (94)
    on left: 94 95, on right: 99
ValueTypeLetter (95)
    on left: 96 97 98, on right: 100
ValueTypeAll (96)
    on left: 99 100, on right: 30
DataTypeNoVoid (97)
    on left: 101 102 103 104 105 106, on right: 85 86
DataType (98)
    on left: 107 108 109 110 111 112 113, on right: 23 67


state 0

    0 $accept: . program $end

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    program              go to state 21
    Starter              go to state 22
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 1

   70 Mif: IF . '(' Expression ')' '{' Statement '}' ELSE Mif
   72 Uif: IF . '(' Expression ')' '{' Statement '}'
   73    | IF . '(' Expression ')' '{' Statement '}' ELSE Condition

    '('  shift, and go to state 45


state 2

   78 ForLoop: FOR . '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}'

    '('  shift, and go to state 46


state 3

   74 WhileLoop: WHILE . '(' Expression ')' '{' Statement '}'

    '('  shift, and go to state 47


state 4

   75 DoWhileLoop: DO . '{' Statement '}' WHILE '(' Expression ')' ';'

    '{'  shift, and go to state 48


state 5

   84 SwitchCase: SWITCH . '(' IDETIFIER ')' '{' Case '}'

    '('  shift, and go to state 49


state 6

   16 Statement: BREAK . ';' Starter

    ';'  shift, and go to state 50


state 7

   17 Statement: CONTINUE . ';' Starter

    ';'  shift, and go to state 51


state 8

   65 Return: RETURN . Expression ';'
   66       | RETURN . ';'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60
    ';'             shift, and go to state 61

    Expression           go to state 62
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 9

  107 DataType: INTEGER .

    $default  reduce using rule 107 (DataType)


state 10

  110 DataType: CHARACTER .

    $default  reduce using rule 110 (DataType)


state 11

  108 DataType: FLOAT .

    $default  reduce using rule 108 (DataType)


state 12

  111 DataType: STRING .

    $default  reduce using rule 111 (DataType)


state 13

  109 DataType: DOUBLE .

    $default  reduce using rule 109 (DataType)


state 14

  112 DataType: BOOLEAN .

    $default  reduce using rule 112 (DataType)


state 15

   24 VarDeclaration: CONSTANT . VarDeclaration

    INTEGER    shift, and go to state 9
    CHARACTER  shift, and go to state 10
    FLOAT      shift, and go to state 11
    STRING     shift, and go to state 12
    DOUBLE     shift, and go to state 13
    BOOLEAN    shift, and go to state 14
    CONSTANT   shift, and go to state 15
    VOID       shift, and go to state 16

    VarDeclaration  go to state 74
    DataType        go to state 75


state 16

  113 DataType: VOID .

    $default  reduce using rule 113 (DataType)


state 17

   51 AssignExp: IDETIFIER . '=' Expression
   53 ArithmeticAssignExp: IDETIFIER . OP_PLUS_EQUAL Expression
   54                    | IDETIFIER . OP_MINUS_EQUAL Expression
   55                    | IDETIFIER . OP_MULTIPLY_EQUAL Expression
   56                    | IDETIFIER . OP_DIVIDE_EQUAL Expression
   57                    | IDETIFIER . OP_MODULO_EQUAL Expression
   60 IncrementExp: IDETIFIER . OP_INCREMENT
   62 DecrementExp: IDETIFIER . OP_DECREMENT
   92 FunctionCallExp: IDETIFIER . '(' Arguments ')'

    OP_INCREMENT       shift, and go to state 76
    OP_DECREMENT       shift, and go to state 77
    OP_MODULO_EQUAL    shift, and go to state 78
    OP_DIVIDE_EQUAL    shift, and go to state 79
    OP_MULTIPLY_EQUAL  shift, and go to state 80
    OP_MINUS_EQUAL     shift, and go to state 81
    OP_PLUS_EQUAL      shift, and go to state 82
    '='                shift, and go to state 83
    '('                shift, and go to state 84


state 18

   59 IncrementExp: OP_INCREMENT . IDETIFIER

    IDETIFIER  shift, and go to state 85


state 19

   61 DecrementExp: OP_DECREMENT . IDETIFIER

    IDETIFIER  shift, and go to state 86


state 20

   71 Mif: '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 87
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 21

    0 $accept: program . $end

    $end  shift, and go to state 88


state 22

    1 program: Starter .

    $default  reduce using rule 1 (program)


state 23

    2 Starter: Statement .

    $default  reduce using rule 2 (Starter)


state 24

    4 Statement: VarDeclaration . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 89
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 25

   52 Assign: AssignExp . ';'

    ';'  shift, and go to state 90


state 26

    5 Statement: Assign . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 91
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 27

   58 ArithmeticAssign: ArithmeticAssignExp . ';'

    ';'  shift, and go to state 92


state 28

   14 Statement: ArithmeticAssign . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 93
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 29

   63 Increment: IncrementExp . ';'

    ';'  shift, and go to state 94


state 30

   64 Decrement: DecrementExp . ';'

    ';'  shift, and go to state 95


state 31

   12 Statement: Increment . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 96
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 32

   13 Statement: Decrement . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 97
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 33

   15 Statement: Return . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 98
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 34

    3 Starter: Function .

    $default  reduce using rule 3 (Starter)


state 35

    7 Statement: Condition . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 99
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 36

   68 Condition: Mif .

    $default  reduce using rule 68 (Condition)


state 37

   69 Condition: Uif .

    $default  reduce using rule 69 (Condition)


state 38

    8 Statement: WhileLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 100
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 39

    9 Statement: DoWhileLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 101
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 40

   10 Statement: ForLoop . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 102
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 41

   11 Statement: SwitchCase . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 103
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 42

   93 FunctionCall: FunctionCallExp . ';'

    ';'  shift, and go to state 104


state 43

    6 Statement: FunctionCall . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 105
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 44

   23 VarDeclaration: DataType . OneLineDeclaration
   67 Function: DataType . IDETIFIER '(' Parameters ')' '{' Statement '}'

    IDETIFIER  shift, and go to state 106

    OneLineDeclaration  go to state 107
    AssignExp           go to state 108


state 45

   70 Mif: IF '(' . Expression ')' '{' Statement '}' ELSE Mif
   72 Uif: IF '(' . Expression ')' '{' Statement '}'
   73    | IF '(' . Expression ')' '{' Statement '}' ELSE Condition

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 109
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 46

   78 ForLoop: FOR '(' . ForLoopInit Expression ';' Expression ')' '{' Statement '}'

    INTEGER    shift, and go to state 9
    CHARACTER  shift, and go to state 10
    FLOAT      shift, and go to state 11
    STRING     shift, and go to state 12
    DOUBLE     shift, and go to state 13
    BOOLEAN    shift, and go to state 14
    CONSTANT   shift, and go to state 15
    VOID       shift, and go to state 16
    IDETIFIER  shift, and go to state 110

    VarDeclaration  go to state 111
    AssignExp       go to state 25
    Assign          go to state 112
    ForLoopInit     go to state 113
    DataType        go to state 75


state 47

   74 WhileLoop: WHILE '(' . Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 114
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 48

   75 DoWhileLoop: DO '{' . Statement '}' WHILE '(' Expression ')' ';'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 115
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 49

   84 SwitchCase: SWITCH '(' . IDETIFIER ')' '{' Case '}'

    IDETIFIER  shift, and go to state 116


state 50

   16 Statement: BREAK ';' . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 117
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 51

   17 Statement: CONTINUE ';' . Starter

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Starter              go to state 118
    Statement            go to state 23
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Function             go to state 34
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 44


state 52

   94 ValueTypeNumber: VAL_INTEGER .

    $default  reduce using rule 94 (ValueTypeNumber)


state 53

   95 ValueTypeNumber: VAL_FLOAT .

    $default  reduce using rule 95 (ValueTypeNumber)


state 54

   98 ValueTypeLetter: VAL_STRING .

    $default  reduce using rule 98 (ValueTypeLetter)


state 55

   97 ValueTypeLetter: VAL_CHAR .

    $default  reduce using rule 97 (ValueTypeLetter)


state 56

   96 ValueTypeLetter: VAL_BOOLEAN .

    $default  reduce using rule 96 (ValueTypeLetter)


state 57

   35 Expression: IDETIFIER .
   51 AssignExp: IDETIFIER . '=' Expression
   53 ArithmeticAssignExp: IDETIFIER . OP_PLUS_EQUAL Expression
   54                    | IDETIFIER . OP_MINUS_EQUAL Expression
   55                    | IDETIFIER . OP_MULTIPLY_EQUAL Expression
   56                    | IDETIFIER . OP_DIVIDE_EQUAL Expression
   57                    | IDETIFIER . OP_MODULO_EQUAL Expression
   60 IncrementExp: IDETIFIER . OP_INCREMENT
   62 DecrementExp: IDETIFIER . OP_DECREMENT
   92 FunctionCallExp: IDETIFIER . '(' Arguments ')'

    OP_INCREMENT       shift, and go to state 76
    OP_DECREMENT       shift, and go to state 77
    OP_MODULO_EQUAL    shift, and go to state 78
    OP_DIVIDE_EQUAL    shift, and go to state 79
    OP_MULTIPLY_EQUAL  shift, and go to state 80
    OP_MINUS_EQUAL     shift, and go to state 81
    OP_PLUS_EQUAL      shift, and go to state 82
    '='                shift, and go to state 83
    '('                shift, and go to state 84

    $default  reduce using rule 35 (Expression)


state 58

   41 ArithmeticExp: '-' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 119
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 59

   50 LogicalExp: OP_LOGICAL_NOT . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 120
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 60

   29 Expression: '(' . Expression ')'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 121
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 61

   66 Return: RETURN ';' .

    $default  reduce using rule 66 (Return)


state 62

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   65 Return: RETURN Expression . ';'

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ';'                  shift, and go to state 135


state 63

   25 Expression: ArithmeticExp .

    $default  reduce using rule 25 (Expression)


state 64

   27 Expression: RelationalExp .

    $default  reduce using rule 27 (Expression)


state 65

   28 Expression: LogicalExp .

    $default  reduce using rule 28 (Expression)


state 66

   31 Expression: AssignExp .

    $default  reduce using rule 31 (Expression)


state 67

   34 Expression: ArithmeticAssignExp .

    $default  reduce using rule 34 (Expression)


state 68

   32 Expression: IncrementExp .

    $default  reduce using rule 32 (Expression)


state 69

   33 Expression: DecrementExp .

    $default  reduce using rule 33 (Expression)


state 70

   26 Expression: FunctionCallExp .

    $default  reduce using rule 26 (Expression)


state 71

   99 ValueTypeAll: ValueTypeNumber .

    $default  reduce using rule 99 (ValueTypeAll)


state 72

  100 ValueTypeAll: ValueTypeLetter .

    $default  reduce using rule 100 (ValueTypeAll)


state 73

   30 Expression: ValueTypeAll .

    $default  reduce using rule 30 (Expression)


state 74

   24 VarDeclaration: CONSTANT VarDeclaration .

    $default  reduce using rule 24 (VarDeclaration)


state 75

   23 VarDeclaration: DataType . OneLineDeclaration

    IDETIFIER  shift, and go to state 136

    OneLineDeclaration  go to state 107
    AssignExp           go to state 108


state 76

   60 IncrementExp: IDETIFIER OP_INCREMENT .

    $default  reduce using rule 60 (IncrementExp)


state 77

   62 DecrementExp: IDETIFIER OP_DECREMENT .

    $default  reduce using rule 62 (DecrementExp)


state 78

   57 ArithmeticAssignExp: IDETIFIER OP_MODULO_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 137
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 79

   56 ArithmeticAssignExp: IDETIFIER OP_DIVIDE_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 138
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 80

   55 ArithmeticAssignExp: IDETIFIER OP_MULTIPLY_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 139
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 81

   54 ArithmeticAssignExp: IDETIFIER OP_MINUS_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 140
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 82

   53 ArithmeticAssignExp: IDETIFIER OP_PLUS_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 141
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 83

   51 AssignExp: IDETIFIER '=' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 142
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 84

   92 FunctionCallExp: IDETIFIER '(' . Arguments ')'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    $default  reduce using rule 91 (Arguments)

    Expression           go to state 143
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    Arguments            go to state 144
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 85

   59 IncrementExp: OP_INCREMENT IDETIFIER .

    $default  reduce using rule 59 (IncrementExp)


state 86

   61 DecrementExp: OP_DECREMENT IDETIFIER .

    $default  reduce using rule 61 (DecrementExp)


state 87

   71 Mif: '{' Statement . '}'

    '}'  shift, and go to state 145


state 88

    0 $accept: program $end .

    $default  accept


state 89

    4 Statement: VarDeclaration Starter .

    $default  reduce using rule 4 (Statement)


state 90

   52 Assign: AssignExp ';' .

    $default  reduce using rule 52 (Assign)


state 91

    5 Statement: Assign Starter .

    $default  reduce using rule 5 (Statement)


state 92

   58 ArithmeticAssign: ArithmeticAssignExp ';' .

    $default  reduce using rule 58 (ArithmeticAssign)


state 93

   14 Statement: ArithmeticAssign Starter .

    $default  reduce using rule 14 (Statement)


state 94

   63 Increment: IncrementExp ';' .

    $default  reduce using rule 63 (Increment)


state 95

   64 Decrement: DecrementExp ';' .

    $default  reduce using rule 64 (Decrement)


state 96

   12 Statement: Increment Starter .

    $default  reduce using rule 12 (Statement)


state 97

   13 Statement: Decrement Starter .

    $default  reduce using rule 13 (Statement)


state 98

   15 Statement: Return Starter .

    $default  reduce using rule 15 (Statement)


state 99

    7 Statement: Condition Starter .

    $default  reduce using rule 7 (Statement)


state 100

    8 Statement: WhileLoop Starter .

    $default  reduce using rule 8 (Statement)


state 101

    9 Statement: DoWhileLoop Starter .

    $default  reduce using rule 9 (Statement)


state 102

   10 Statement: ForLoop Starter .

    $default  reduce using rule 10 (Statement)


state 103

   11 Statement: SwitchCase Starter .

    $default  reduce using rule 11 (Statement)


state 104

   93 FunctionCall: FunctionCallExp ';' .

    $default  reduce using rule 93 (FunctionCall)


state 105

    6 Statement: FunctionCall Starter .

    $default  reduce using rule 6 (Statement)


state 106

   21 OneLineDeclaration: IDETIFIER . ',' OneLineDeclaration
   22                   | IDETIFIER . ';'
   51 AssignExp: IDETIFIER . '=' Expression
   67 Function: DataType IDETIFIER . '(' Parameters ')' '{' Statement '}'

    '='  shift, and go to state 83
    '('  shift, and go to state 146
    ';'  shift, and go to state 147
    ','  shift, and go to state 148


state 107

   23 VarDeclaration: DataType OneLineDeclaration .

    $default  reduce using rule 23 (VarDeclaration)


state 108

   19 OneLineDeclaration: AssignExp . ',' OneLineDeclaration
   20                   | AssignExp . ';'

    ';'  shift, and go to state 149
    ','  shift, and go to state 150


state 109

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   70 Mif: IF '(' Expression . ')' '{' Statement '}' ELSE Mif
   72 Uif: IF '(' Expression . ')' '{' Statement '}'
   73    | IF '(' Expression . ')' '{' Statement '}' ELSE Condition

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ')'                  shift, and go to state 151


state 110

   51 AssignExp: IDETIFIER . '=' Expression

    '='  shift, and go to state 83


state 111

   76 ForLoopInit: VarDeclaration .

    $default  reduce using rule 76 (ForLoopInit)


state 112

   77 ForLoopInit: Assign .

    $default  reduce using rule 77 (ForLoopInit)


state 113

   78 ForLoop: FOR '(' ForLoopInit . Expression ';' Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 152
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 114

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   74 WhileLoop: WHILE '(' Expression . ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ')'                  shift, and go to state 153


state 115

   75 DoWhileLoop: DO '{' Statement . '}' WHILE '(' Expression ')' ';'

    '}'  shift, and go to state 154


state 116

   84 SwitchCase: SWITCH '(' IDETIFIER . ')' '{' Case '}'

    ')'  shift, and go to state 155


state 117

   16 Statement: BREAK ';' Starter .

    $default  reduce using rule 16 (Statement)


state 118

   17 Statement: CONTINUE ';' Starter .

    $default  reduce using rule 17 (Statement)


state 119

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   41              | '-' Expression .
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 41 (ArithmeticExp)


state 120

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   50           | OP_LOGICAL_NOT Expression .

    $default  reduce using rule 50 (LogicalExp)


state 121

   29 Expression: '(' Expression . ')'
   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ')'                  shift, and go to state 156


state 122

   48 LogicalExp: Expression OP_LOGICAL_OR . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 157
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 123

   49 LogicalExp: Expression OP_LOGICAL_AND . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 158
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 124

   43 RelationalExp: Expression OP_INEQUALITY . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 159
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 125

   42 RelationalExp: Expression OP_EQUALITY . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 160
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 126

   46 RelationalExp: Expression OP_GREATER_THAN . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 161
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 127

   47 RelationalExp: Expression OP_LESS_THAN . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 162
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 128

   44 RelationalExp: Expression OP_GREATER_OR_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 163
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 129

   45 RelationalExp: Expression OP_LESS_OR_EQUAL . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 164
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 130

   36 ArithmeticExp: Expression '+' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 165
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 131

   37 ArithmeticExp: Expression '-' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 166
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 132

   38 ArithmeticExp: Expression '*' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 167
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 133

   39 ArithmeticExp: Expression '/' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 168
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 134

   40 ArithmeticExp: Expression '%' . Expression

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 169
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 135

   65 Return: RETURN Expression ';' .

    $default  reduce using rule 65 (Return)


state 136

   21 OneLineDeclaration: IDETIFIER . ',' OneLineDeclaration
   22                   | IDETIFIER . ';'
   51 AssignExp: IDETIFIER . '=' Expression

    '='  shift, and go to state 83
    ';'  shift, and go to state 147
    ','  shift, and go to state 148


state 137

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   57 ArithmeticAssignExp: IDETIFIER OP_MODULO_EQUAL Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 57 (ArithmeticAssignExp)


state 138

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   56 ArithmeticAssignExp: IDETIFIER OP_DIVIDE_EQUAL Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 56 (ArithmeticAssignExp)


state 139

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   55 ArithmeticAssignExp: IDETIFIER OP_MULTIPLY_EQUAL Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 55 (ArithmeticAssignExp)


state 140

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   54 ArithmeticAssignExp: IDETIFIER OP_MINUS_EQUAL Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 54 (ArithmeticAssignExp)


state 141

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   53 ArithmeticAssignExp: IDETIFIER OP_PLUS_EQUAL Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 53 (ArithmeticAssignExp)


state 142

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   51 AssignExp: IDETIFIER '=' Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 51 (AssignExp)


state 143

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   89 Arguments: Expression . ',' Arguments
   90          | Expression .

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ','                  shift, and go to state 170

    $default  reduce using rule 90 (Arguments)


state 144

   92 FunctionCallExp: IDETIFIER '(' Arguments . ')'

    ')'  shift, and go to state 171


state 145

   71 Mif: '{' Statement '}' .

    $default  reduce using rule 71 (Mif)


state 146

   67 Function: DataType IDETIFIER '(' . Parameters ')' '{' Statement '}'

    INTEGER    shift, and go to state 172
    CHARACTER  shift, and go to state 173
    FLOAT      shift, and go to state 174
    STRING     shift, and go to state 175
    DOUBLE     shift, and go to state 176
    BOOLEAN    shift, and go to state 177
    VOID       shift, and go to state 178

    $default  reduce using rule 88 (Parameters)

    Parameters      go to state 179
    DataTypeNoVoid  go to state 180


state 147

   22 OneLineDeclaration: IDETIFIER ';' .

    $default  reduce using rule 22 (OneLineDeclaration)


state 148

   21 OneLineDeclaration: IDETIFIER ',' . OneLineDeclaration

    IDETIFIER  shift, and go to state 136

    OneLineDeclaration  go to state 181
    AssignExp           go to state 108


state 149

   20 OneLineDeclaration: AssignExp ';' .

    $default  reduce using rule 20 (OneLineDeclaration)


state 150

   19 OneLineDeclaration: AssignExp ',' . OneLineDeclaration

    IDETIFIER  shift, and go to state 136

    OneLineDeclaration  go to state 182
    AssignExp           go to state 108


state 151

   70 Mif: IF '(' Expression ')' . '{' Statement '}' ELSE Mif
   72 Uif: IF '(' Expression ')' . '{' Statement '}'
   73    | IF '(' Expression ')' . '{' Statement '}' ELSE Condition

    '{'  shift, and go to state 183


state 152

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   78 ForLoop: FOR '(' ForLoopInit Expression . ';' Expression ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ';'                  shift, and go to state 184


state 153

   74 WhileLoop: WHILE '(' Expression ')' . '{' Statement '}'

    '{'  shift, and go to state 185


state 154

   75 DoWhileLoop: DO '{' Statement '}' . WHILE '(' Expression ')' ';'

    WHILE  shift, and go to state 186


state 155

   84 SwitchCase: SWITCH '(' IDETIFIER ')' . '{' Case '}'

    '{'  shift, and go to state 187


state 156

   29 Expression: '(' Expression ')' .

    $default  reduce using rule 29 (Expression)


state 157

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   48           | Expression OP_LOGICAL_OR Expression .
   49           | Expression . OP_LOGICAL_AND Expression

    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 48 (LogicalExp)


state 158

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   49           | Expression OP_LOGICAL_AND Expression .

    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 49 (LogicalExp)


state 159

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   43              | Expression OP_INEQUALITY Expression .
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 43 (RelationalExp)


state 160

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   42              | Expression OP_EQUALITY Expression .
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134

    $default  reduce using rule 42 (RelationalExp)


state 161

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   46              | Expression OP_GREATER_THAN Expression .
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 46 (RelationalExp)


state 162

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   47              | Expression OP_LESS_THAN Expression .
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 47 (RelationalExp)


state 163

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   44              | Expression OP_GREATER_OR_EQUAL Expression .
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 44 (RelationalExp)


state 164

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   45              | Expression OP_LESS_OR_EQUAL Expression .
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 45 (RelationalExp)


state 165

   36 ArithmeticExp: Expression . '+' Expression
   36              | Expression '+' Expression .
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 36 (ArithmeticExp)


state 166

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   37              | Expression '-' Expression .
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 37 (ArithmeticExp)


state 167

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   38              | Expression '*' Expression .
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 38 (ArithmeticExp)


state 168

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   39              | Expression '/' Expression .
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 39 (ArithmeticExp)


state 169

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   40              | Expression '%' Expression .
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression

    $default  reduce using rule 40 (ArithmeticExp)


state 170

   89 Arguments: Expression ',' . Arguments

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    $default  reduce using rule 91 (Arguments)

    Expression           go to state 143
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    Arguments            go to state 188
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 171

   92 FunctionCallExp: IDETIFIER '(' Arguments ')' .

    $default  reduce using rule 92 (FunctionCallExp)


state 172

  101 DataTypeNoVoid: INTEGER .

    $default  reduce using rule 101 (DataTypeNoVoid)


state 173

  104 DataTypeNoVoid: CHARACTER .

    $default  reduce using rule 104 (DataTypeNoVoid)


state 174

  102 DataTypeNoVoid: FLOAT .

    $default  reduce using rule 102 (DataTypeNoVoid)


state 175

  105 DataTypeNoVoid: STRING .

    $default  reduce using rule 105 (DataTypeNoVoid)


state 176

  103 DataTypeNoVoid: DOUBLE .

    $default  reduce using rule 103 (DataTypeNoVoid)


state 177

  106 DataTypeNoVoid: BOOLEAN .

    $default  reduce using rule 106 (DataTypeNoVoid)


state 178

   87 Parameters: VOID .

    $default  reduce using rule 87 (Parameters)


state 179

   67 Function: DataType IDETIFIER '(' Parameters . ')' '{' Statement '}'

    ')'  shift, and go to state 189


state 180

   85 Parameters: DataTypeNoVoid . IDETIFIER ',' DataTypeNoVoid IDETIFIER
   86           | DataTypeNoVoid . IDETIFIER

    IDETIFIER  shift, and go to state 190


state 181

   21 OneLineDeclaration: IDETIFIER ',' OneLineDeclaration .

    $default  reduce using rule 21 (OneLineDeclaration)


state 182

   19 OneLineDeclaration: AssignExp ',' OneLineDeclaration .

    $default  reduce using rule 19 (OneLineDeclaration)


state 183

   70 Mif: IF '(' Expression ')' '{' . Statement '}' ELSE Mif
   72 Uif: IF '(' Expression ')' '{' . Statement '}'
   73    | IF '(' Expression ')' '{' . Statement '}' ELSE Condition

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 191
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 184

   78 ForLoop: FOR '(' ForLoopInit Expression ';' . Expression ')' '{' Statement '}'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 192
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 185

   74 WhileLoop: WHILE '(' Expression ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 193
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 186

   75 DoWhileLoop: DO '{' Statement '}' WHILE . '(' Expression ')' ';'

    '('  shift, and go to state 194


state 187

   84 SwitchCase: SWITCH '(' IDETIFIER ')' '{' . Case '}'

    CASE     shift, and go to state 195
    DEFAULT  shift, and go to state 196

    $default  reduce using rule 83 (Case)

    Case  go to state 197


state 188

   89 Arguments: Expression ',' Arguments .

    $default  reduce using rule 89 (Arguments)


state 189

   67 Function: DataType IDETIFIER '(' Parameters ')' . '{' Statement '}'

    '{'  shift, and go to state 198


state 190

   85 Parameters: DataTypeNoVoid IDETIFIER . ',' DataTypeNoVoid IDETIFIER
   86           | DataTypeNoVoid IDETIFIER .

    ','  shift, and go to state 199

    $default  reduce using rule 86 (Parameters)


state 191

   70 Mif: IF '(' Expression ')' '{' Statement . '}' ELSE Mif
   72 Uif: IF '(' Expression ')' '{' Statement . '}'
   73    | IF '(' Expression ')' '{' Statement . '}' ELSE Condition

    '}'  shift, and go to state 200


state 192

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression . ')' '{' Statement '}'

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ')'                  shift, and go to state 201


state 193

   74 WhileLoop: WHILE '(' Expression ')' '{' Statement . '}'

    '}'  shift, and go to state 202


state 194

   75 DoWhileLoop: DO '{' Statement '}' WHILE '(' . Expression ')' ';'

    VAL_INTEGER     shift, and go to state 52
    VAL_FLOAT       shift, and go to state 53
    VAL_STRING      shift, and go to state 54
    VAL_CHAR        shift, and go to state 55
    VAL_BOOLEAN     shift, and go to state 56
    IDETIFIER       shift, and go to state 57
    OP_INCREMENT    shift, and go to state 18
    OP_DECREMENT    shift, and go to state 19
    '-'             shift, and go to state 58
    OP_LOGICAL_NOT  shift, and go to state 59
    '('             shift, and go to state 60

    Expression           go to state 203
    ArithmeticExp        go to state 63
    RelationalExp        go to state 64
    LogicalExp           go to state 65
    AssignExp            go to state 66
    ArithmeticAssignExp  go to state 67
    IncrementExp         go to state 68
    DecrementExp         go to state 69
    FunctionCallExp      go to state 70
    ValueTypeNumber      go to state 71
    ValueTypeLetter      go to state 72
    ValueTypeAll         go to state 73


state 195

   81 Case: CASE . SwitchValueTypes ':' Statement Case

    VAL_INTEGER  shift, and go to state 204
    VAL_CHAR     shift, and go to state 205

    SwitchValueTypes  go to state 206


state 196

   82 Case: DEFAULT . ':' Statement

    ':'  shift, and go to state 207


state 197

   84 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case . '}'

    '}'  shift, and go to state 208


state 198

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 209
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 199

   85 Parameters: DataTypeNoVoid IDETIFIER ',' . DataTypeNoVoid IDETIFIER

    INTEGER    shift, and go to state 172
    CHARACTER  shift, and go to state 173
    FLOAT      shift, and go to state 174
    STRING     shift, and go to state 175
    DOUBLE     shift, and go to state 176
    BOOLEAN    shift, and go to state 177

    DataTypeNoVoid  go to state 210


state 200

   70 Mif: IF '(' Expression ')' '{' Statement '}' . ELSE Mif
   72 Uif: IF '(' Expression ')' '{' Statement '}' .
   73    | IF '(' Expression ')' '{' Statement '}' . ELSE Condition

    ELSE  shift, and go to state 211

    $default  reduce using rule 72 (Uif)


state 201

   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' . '{' Statement '}'

    '{'  shift, and go to state 212


state 202

   74 WhileLoop: WHILE '(' Expression ')' '{' Statement '}' .

    $default  reduce using rule 74 (WhileLoop)


state 203

   36 ArithmeticExp: Expression . '+' Expression
   37              | Expression . '-' Expression
   38              | Expression . '*' Expression
   39              | Expression . '/' Expression
   40              | Expression . '%' Expression
   42 RelationalExp: Expression . OP_EQUALITY Expression
   43              | Expression . OP_INEQUALITY Expression
   44              | Expression . OP_GREATER_OR_EQUAL Expression
   45              | Expression . OP_LESS_OR_EQUAL Expression
   46              | Expression . OP_GREATER_THAN Expression
   47              | Expression . OP_LESS_THAN Expression
   48 LogicalExp: Expression . OP_LOGICAL_OR Expression
   49           | Expression . OP_LOGICAL_AND Expression
   75 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression . ')' ';'

    OP_LOGICAL_OR        shift, and go to state 122
    OP_LOGICAL_AND       shift, and go to state 123
    OP_INEQUALITY        shift, and go to state 124
    OP_EQUALITY          shift, and go to state 125
    OP_GREATER_THAN      shift, and go to state 126
    OP_LESS_THAN         shift, and go to state 127
    OP_GREATER_OR_EQUAL  shift, and go to state 128
    OP_LESS_OR_EQUAL     shift, and go to state 129
    '+'                  shift, and go to state 130
    '-'                  shift, and go to state 131
    '*'                  shift, and go to state 132
    '/'                  shift, and go to state 133
    '%'                  shift, and go to state 134
    ')'                  shift, and go to state 213


state 204

   79 SwitchValueTypes: VAL_INTEGER .

    $default  reduce using rule 79 (SwitchValueTypes)


state 205

   80 SwitchValueTypes: VAL_CHAR .

    $default  reduce using rule 80 (SwitchValueTypes)


state 206

   81 Case: CASE SwitchValueTypes . ':' Statement Case

    ':'  shift, and go to state 214


state 207

   82 Case: DEFAULT ':' . Statement

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 215
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 208

   84 SwitchCase: SWITCH '(' IDETIFIER ')' '{' Case '}' .

    $default  reduce using rule 84 (SwitchCase)


state 209

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement . '}'

    '}'  shift, and go to state 216


state 210

   85 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid . IDETIFIER

    IDETIFIER  shift, and go to state 217


state 211

   70 Mif: IF '(' Expression ')' '{' Statement '}' ELSE . Mif
   73 Uif: IF '(' Expression ')' '{' Statement '}' ELSE . Condition

    IF   shift, and go to state 1
    '{'  shift, and go to state 20

    Condition  go to state 218
    Mif        go to state 219
    Uif        go to state 37


state 212

   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' . Statement '}'

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 220
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 213

   75 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' . ';'

    ';'  shift, and go to state 221


state 214

   81 Case: CASE SwitchValueTypes ':' . Statement Case

    IF            shift, and go to state 1
    FOR           shift, and go to state 2
    WHILE         shift, and go to state 3
    DO            shift, and go to state 4
    SWITCH        shift, and go to state 5
    BREAK         shift, and go to state 6
    CONTINUE      shift, and go to state 7
    RETURN        shift, and go to state 8
    INTEGER       shift, and go to state 9
    CHARACTER     shift, and go to state 10
    FLOAT         shift, and go to state 11
    STRING        shift, and go to state 12
    DOUBLE        shift, and go to state 13
    BOOLEAN       shift, and go to state 14
    CONSTANT      shift, and go to state 15
    VOID          shift, and go to state 16
    IDETIFIER     shift, and go to state 17
    OP_INCREMENT  shift, and go to state 18
    OP_DECREMENT  shift, and go to state 19
    '{'           shift, and go to state 20

    $default  reduce using rule 18 (Statement)

    Statement            go to state 222
    VarDeclaration       go to state 24
    AssignExp            go to state 25
    Assign               go to state 26
    ArithmeticAssignExp  go to state 27
    ArithmeticAssign     go to state 28
    IncrementExp         go to state 29
    DecrementExp         go to state 30
    Increment            go to state 31
    Decrement            go to state 32
    Return               go to state 33
    Condition            go to state 35
    Mif                  go to state 36
    Uif                  go to state 37
    WhileLoop            go to state 38
    DoWhileLoop          go to state 39
    ForLoop              go to state 40
    SwitchCase           go to state 41
    FunctionCallExp      go to state 42
    FunctionCall         go to state 43
    DataType             go to state 75


state 215

   82 Case: DEFAULT ':' Statement .

    $default  reduce using rule 82 (Case)


state 216

   67 Function: DataType IDETIFIER '(' Parameters ')' '{' Statement '}' .

    $default  reduce using rule 67 (Function)


state 217

   85 Parameters: DataTypeNoVoid IDETIFIER ',' DataTypeNoVoid IDETIFIER .

    $default  reduce using rule 85 (Parameters)


state 218

   73 Uif: IF '(' Expression ')' '{' Statement '}' ELSE Condition .

    $default  reduce using rule 73 (Uif)


state 219

   68 Condition: Mif .
   70 Mif: IF '(' Expression ')' '{' Statement '}' ELSE Mif .

    $end          reduce using rule 68 (Condition)
    $end          [reduce using rule 70 (Mif)]
    IF            reduce using rule 68 (Condition)
    IF            [reduce using rule 70 (Mif)]
    FOR           reduce using rule 68 (Condition)
    FOR           [reduce using rule 70 (Mif)]
    WHILE         reduce using rule 68 (Condition)
    WHILE         [reduce using rule 70 (Mif)]
    DO            reduce using rule 68 (Condition)
    DO            [reduce using rule 70 (Mif)]
    SWITCH        reduce using rule 68 (Condition)
    SWITCH        [reduce using rule 70 (Mif)]
    CASE          reduce using rule 68 (Condition)
    CASE          [reduce using rule 70 (Mif)]
    DEFAULT       reduce using rule 68 (Condition)
    DEFAULT       [reduce using rule 70 (Mif)]
    BREAK         reduce using rule 68 (Condition)
    BREAK         [reduce using rule 70 (Mif)]
    CONTINUE      reduce using rule 68 (Condition)
    CONTINUE      [reduce using rule 70 (Mif)]
    RETURN        reduce using rule 68 (Condition)
    RETURN        [reduce using rule 70 (Mif)]
    INTEGER       reduce using rule 68 (Condition)
    INTEGER       [reduce using rule 70 (Mif)]
    CHARACTER     reduce using rule 68 (Condition)
    CHARACTER     [reduce using rule 70 (Mif)]
    FLOAT         reduce using rule 68 (Condition)
    FLOAT         [reduce using rule 70 (Mif)]
    STRING        reduce using rule 68 (Condition)
    STRING        [reduce using rule 70 (Mif)]
    DOUBLE        reduce using rule 68 (Condition)
    DOUBLE        [reduce using rule 70 (Mif)]
    BOOLEAN       reduce using rule 68 (Condition)
    BOOLEAN       [reduce using rule 70 (Mif)]
    CONSTANT      reduce using rule 68 (Condition)
    CONSTANT      [reduce using rule 70 (Mif)]
    VOID          reduce using rule 68 (Condition)
    VOID          [reduce using rule 70 (Mif)]
    IDETIFIER     reduce using rule 68 (Condition)
    IDETIFIER     [reduce using rule 70 (Mif)]
    OP_INCREMENT  reduce using rule 68 (Condition)
    OP_INCREMENT  [reduce using rule 70 (Mif)]
    OP_DECREMENT  reduce using rule 68 (Condition)
    OP_DECREMENT  [reduce using rule 70 (Mif)]
    '{'           reduce using rule 68 (Condition)
    '{'           [reduce using rule 70 (Mif)]
    '}'           reduce using rule 68 (Condition)
    '}'           [reduce using rule 70 (Mif)]
    $default      reduce using rule 68 (Condition)


state 220

   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement . '}'

    '}'  shift, and go to state 223


state 221

   75 DoWhileLoop: DO '{' Statement '}' WHILE '(' Expression ')' ';' .

    $default  reduce using rule 75 (DoWhileLoop)


state 222

   81 Case: CASE SwitchValueTypes ':' Statement . Case

    CASE     shift, and go to state 195
    DEFAULT  shift, and go to state 196

    $default  reduce using rule 83 (Case)

    Case  go to state 224


state 223

   78 ForLoop: FOR '(' ForLoopInit Expression ';' Expression ')' '{' Statement '}' .

    $default  reduce using rule 78 (ForLoop)


state 224

   81 Case: CASE SwitchValueTypes ':' Statement Case .

    $default  reduce using rule 81 (Case)
